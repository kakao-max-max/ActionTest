name: ActionFramework Tests

on:
  push:
    branches:
      - main
    paths:
      - 'ActionFramework/**/*.py'
  pull_request:
    paths:
      - 'ActionFramework/**/*.py'
  manual:
    branches:
      - "*"

jobs:
  test:
    name: Run ActionFramework Tests
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Find Available Simulator and Run Tests
        run: |
          echo "üîç Fetching available simulators..."
          xcrun simctl list devices --json > devices.json
          cat devices.json | jq '.devices' > all_devices.json
          
          echo "üîç Filtering for available iPhone simulators..."
          UDID=$(cat devices.json | jq -r '
            .devices | to_entries[] |
            select(.key | startswith("com.apple.CoreSimulator.SimRuntime.iOS")) |
            .value[] |
            select(.isAvailable == true and (.name | test("^iPhone"))) |
            .udid' | head -n 1)

          if [ -z "$UDID" ]; then
            echo "‚ùå No available iPhone simulators found!"
            exit 1
          fi

          echo "‚úÖ Using simulator with UDID: $UDID"

          echo "üöÄ Booting simulator..."
          xcrun simctl boot "$UDID" || true

          echo "üß™ Running tests..."
          xcodebuild test \
            -workspace ActionTest.xcworkspace \
            -scheme ActionFrameworkTests \
            -destination 'platform=iOS Simulator,name=iPhone 16'
